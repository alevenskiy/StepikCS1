#include <iostream>
using namespace std;

// определите только функцию power, где
//    x - число, которое нужно возвести в степень
//    p - степень, в которую нужно возвести x
//
int power(int x, unsigned p) {
    int answer = 1;

    for (int i = 0; i < p; i++) {
        answer *= x;
    }

    return answer;
}


/*Простая задача на закрепления материала по работе с  вводом/выводом. 
Напишите программу, которая суммирует целые числа. 
На вход программе подаются целые числа в следующем формате: на первой строке идет целое число TT — количество тестов,
  далее следует T строк, в каждой из которых через пробел идут два целых числа a_i и b_i
​На выводе для каждой из TT строк нужно вывести сумму a_i + b_i в том порядке, в котором пары поступают на вход.*/
void step10() {
    int t = 0;
    cin >> t;

    for (int i = 0; i < t; i++) {
        int a = 0;
        int b = 0;
        cin >> a >> b;
        cout << ' ' << a + b;
    }
}

/*Напишите программу для решения квадратных уравнений вида ax^2+bx+c=0 (относительно x).
На вход программа получает три целых числа: a , b и c, соответственно.
При этом гарантируется, что a != 0. На вывод программа должна вывести два вещественных корня уравнения, разделённые пробелом. 
Если вещественных корней нет, то программа должна вывести строку "No real roots". 
Если у уравнения имеется только один корень (кратный корень), то программа должна вывести его дважды.*/
void step11() {
    int a, b, c;
    cin >> a >> b >> c;
    double x1 = 0;
    double x2 = 0;

    double d = (b * b) - (4 * a * c);
    if (d < 0) cout << "No real roots";
    /*else if (d == 0) {
        x1 = - ((b * b) / (2 * a));
        x2 = x1;
    }*/
    else {
        x1 = (-b - sqrt(d)) / (2 * a);
        x2 = (-b + sqrt(d)) / (2 * a);
        cout << x1 << ' ' << x2;
    }
}

/*Напишите программу, которая посимвольно читает из std::cin, пока не достигнет конца потока ввода, 
и заменяет несколько подряд идущих пробелов одним и выводит полученный результат в std::cout*/
void step12() {
    char c = '\0';
    cin.get(c);
    char l = c;
    while (cin.get(c)) {
        if (l == ' ' && c == ' ') {
            l = c;
            continue;
        }
        cout << l;
        l = c;
    }
    cout << c;
}

/*Напишите программу для вычисления целочисленного логарифма по основанию 2.
На вход программе в первой строке подается число T, далее следует T строк с тестами.
Каждый тест состоит из одного целого положительного числа a_i < 10^9, 
для каждого a_i нужно вывести на отдельной строке такое наибольшее число p, что 2^p ≤ a_i. 
 Гарантируется, что a_i ≥ 1*/

int stepen2(int p) {
    int a = 1;
    for (int i = 0; i < p; i++) {
        a = a * 2;
    }
    return a;
}
void step13() {
    int t = 0;
    cin >> t;

    for (int i = 0; i < t; i++) {
        int a = 0;
        cin >> a;

        int p = 0;
        while (stepen2(p) <= a) {
            p++;
        }
        cout << p - 1 << ' ';

    }
}